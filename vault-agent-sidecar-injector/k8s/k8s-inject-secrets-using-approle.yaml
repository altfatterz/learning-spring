apiVersion: apps/v1
kind: Deployment
metadata:
  name: vault-agent-sidecar-injector-demo
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vault-agent-sidecar-injector-demo
  template:
    metadata:
      labels:
        app: vault-agent-sidecar-injector-demo
      annotations:
        vault.hashicorp.com/agent-inject-status: 'update'
        # enables the Vault Agent Injector service
        vault.hashicorp.com/agent-inject: 'true'

        # The Vault Agent will use `AppRole` authentication for retrieving secrets, by default is set to `kubernetes`
        vault.hashicorp.com/auth-type: 'approle'
        # Configures the authentication path, default is 'auth/kubernetes'
        vault.hashicorp.com/auth-path: 'auth/approle'

        # TODO Check: https://developer.hashicorp.com/vault/docs/platform/k8s/injector/examples#configmap-example
        # TODO Check: https://developer.hashicorp.com/vault/docs/agent-and-proxy/autoauth/methods/approle
        # Question: https://discuss.hashicorp.com/t/getting-vault-secret-id-for-approle-in-kubernetes/60370
        #
        vault.hashicorp.com/auth-config-role-id-file-path: '/vault/custom/role-id'
        vault.hashicorp.com/auth-config-secret-id-file-path: '/vault/custom/secret-id'

        vault.hashicorp.com/role: 'vault-agent-sidecar-injector-demo-approle'
        # prefixes the path of the file, database.properties written to the /vault/secrets directory.
        vault.hashicorp.com/agent-inject-secret-database.properties: 'secret/data/vault-agent-sidecar-injector-demo'
        vault.hashicorp.com/agent-inject-template-database.properties: |
          {{- with secret "secret/data/vault-agent-sidecar-injector-demo" -}}
          spring.r2dbc.username={{ .Data.data.db_username }}
          spring.r2dbc.password={{ .Data.data.db_password }}
          spring.r2dbc.url={{ .Data.data.db_url }}
          {{- end -}}
    spec:
      serviceAccountName: vault-agent-sidecar-injector-demo-sa
      containers:
        - name: app
          image: vault-agent-sidecar-injector:0.0.1-SNAPSHOT
          ports:
            - containerPort: 8080
# Not needed anymore taking it from /vault/secrets/database.properties
#          env:
#            - name: SPRING_R2DBC_URL
#              value: r2dbc:postgresql://my-postgresql:5432/postgres
---
apiVersion: v1
kind: Service
metadata:
  name: vault-agent-sidecar-injector-demo
spec:
  selector:
    app: vault-agent-sidecar-injector-demo
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080